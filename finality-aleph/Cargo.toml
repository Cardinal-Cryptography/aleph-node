[package]
name = "finality-aleph"
version = "0.8.0"
license = "Apache 2.0"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
# fixed version to 'freeze' some types used in abft, mainly `SignatureSet` used in justification and signature aggregation
aleph-bft-crypto = { workspace = true }

current-aleph-bft = { package = "aleph-bft", version = "0.20" }
current-aleph-bft-rmc = { package = "aleph-bft-rmc", version = "0.6" }
legacy-aleph-bft = { package = "aleph-bft", version = "0.19" }
legacy-aleph-bft-rmc = { package = "aleph-bft-rmc", version = "0.5" }

network-clique = { workspace = true }
primitives = { workspace = true }
legacy-aleph-aggregator = { package = "aggregator", git = "https://github.com/Cardinal-Cryptography/aleph-node.git", tag = "aggregator-v0.2.1" }
current-aleph-aggregator = { path = "../aggregator", package = "aggregator" }
rate-limiter = { package = "rate-limiter", path = "../rate-limiter" }

async-trait = { workspace = true }
bytes = { workspace = true }
derive_more = { workspace = true }
env_logger = { workspace = true }
futures = { workspace = true }
futures-timer = { workspace = true }
hash-db = { workspace = true }
ip_network = { workspace = true }
log = { workspace = true }
lru = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive"] }
parking_lot = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
static_assertions = { workspace = true }
tiny-bip39 = { workspace = true }
tokio = { workspace = true, features = ["sync", "macros", "time", "rt-multi-thread"] }

substrate-prometheus-endpoint = { workspace = true }

sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-network-sync = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-utils = { workspace = true }

sp-api = { workspace = true }
sp-application-crypto = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-keystore = { workspace = true }
sp-runtime = { workspace = true }
sp-state-machine = { workspace = true }
sp-trie = { workspace = true }

[dev-dependencies]
substrate-test-runtime-client = { workspace = true }
substrate-test-runtime = { workspace = true }
substrate-test-client = { workspace = true }
sc-block-builder = { workspace = true }
aleph-runtime = { workspace = true }

[features]
only_legacy = []
