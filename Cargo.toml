[workspace]

members = [
    "aggregator",
    "baby-liminal-extension",
    "bin/node",
    "bin/runtime",
    "clique",
    "finality-aleph",
    "pallets/aleph",
    "pallets/elections",
    "pallets/feature-control",
    "pallets/committee-management",
    "pallets/operations",
    "pallets/support",
    "pallets/vk-storage",
    "primitives",
    "rate-limiter",
    "runtime-interfaces",
]

exclude = [
    "aleph-client",
    "benches/payout-stakers",
    "bin/cliain",
    "bin/finalizer",
    "contracts/adder",
    "e2e-tests",
    "flooder",
    "scripts/synthetic-network/synthetic-link",
]

[profile.release]
# Substrate runtime requires unwinding.
panic = "unwind"

[profile.production]
inherits = "release"
lto = true
codegen-units = 1

[workspace.package]
authors = ["Cardinal", "Aleph Zero Foundation"]
edition = "2021"
homepage = "https://alephzero.org"
repository = "https://github.com/Cardinal-Cryptography/aleph-node"

[workspace.dependencies]
aleph-bft-crypto = { version = "0.8" }
aleph-bft-mock = { version = "0.11.1" }
aleph-bft-rmc = { version = "0.11" }
aleph-bft-types = { version = "0.11" }
async-trait = { version = "0.1" }
bytes = { version = "1.5" }
derive_more = { version = "0.99" }
env_logger = { version = "0.10" }
futures = { version = "0.3" }
futures-timer = { version = "3.0" }
hash-db = { version = "0.16", default-features = false }
hex = { version = "0.4" }
hex-literal = { version = "0.3" }
ink = { version = "5.0.0-rc", default-features = false }
ip_network = { version = "0.4" }
jsonrpsee = { version = "0.16.3" }
libp2p = { version = "0.51" }
log = { version = "0.4", default-features = false }
lru = { version = "0.10" }
parity-scale-codec = { version = "3.0", default-features = false }
parking_lot = { version = "0.12" }
paste = { version = "1.0" }
rand = { version = "0.8.5", default-features = false }
scale-info = { version = "2.0", default-features = false }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0", default-features = false }
smallvec = { version = "1", default-features = false }
static_assertions = { version = "1.1" }
thiserror = { version = "1.0" }
tiny-bip39 = { version = "1.0" }
tokio = { version = "1.36" }
rand_pcg = { version = "0.3.1", default-features = false }

frame-benchmarking = { path = "../polkadot-sdk/substrate/frame/benchmarking", default-features = false }
frame-benchmarking-cli = { path = "../polkadot-sdk/substrate/utils/frame/benchmarking-cli", default-features = false }
frame-election-provider-support = { path = "../polkadot-sdk/substrate/frame/election-provider-support", default-features = false }
frame-executive = { path = "../polkadot-sdk/substrate/frame/executive", default-features = false }
frame-support = { path = "../polkadot-sdk/substrate/frame/support", default-features = false }
frame-system = { path = "../polkadot-sdk/substrate/frame/system", default-features = false }
frame-system-rpc-runtime-api = { path = "../polkadot-sdk/substrate/frame/system/rpc/runtime-api", default-features = false }
frame-try-runtime = { path = "../polkadot-sdk/substrate/frame/try-runtime", default-features = false }

pallet-aura = { path = "../polkadot-sdk/substrate/frame/aura", default-features = false }
pallet-authorship = { path = "../polkadot-sdk/substrate/frame/authorship", default-features = false }
pallet-balances = { path = "../polkadot-sdk/substrate/frame/balances", default-features = false }
pallet-contracts = { path = "../polkadot-sdk/substrate/frame/contracts", default-features = false }
pallet-contracts-primitives = { path = "../polkadot-sdk/substrate/frame/contracts/primitives", default-features = false }
pallet-identity = { path = "../polkadot-sdk/substrate/frame/identity", default-features = false }
pallet-multisig = { path = "../polkadot-sdk/substrate/frame/multisig", default-features = false }
pallet-nomination-pools = { path = "../polkadot-sdk/substrate/frame/nomination-pools", default-features = false }
pallet-nomination-pools-runtime-api = { path = "../polkadot-sdk/substrate/frame/nomination-pools/runtime-api", default-features = false }
pallet-insecure-randomness-collective-flip = { path = "../polkadot-sdk/substrate/frame/insecure-randomness-collective-flip", default-features = false }
pallet-scheduler = { path = "../polkadot-sdk/substrate/frame/scheduler", default-features = false }
pallet-session = { path = "../polkadot-sdk/substrate/frame/session", default-features = false }
pallet-staking = { path = "../polkadot-sdk/substrate/frame/staking", default-features = false }
pallet-staking-runtime-api = { path = "../polkadot-sdk/substrate/frame/staking/runtime-api", default-features = false }
pallet-sudo = { path = "../polkadot-sdk/substrate/frame/sudo", default-features = false }
pallet-timestamp = { path = "../polkadot-sdk/substrate/frame/timestamp", default-features = false }
pallet-transaction-payment = { path = "../polkadot-sdk/substrate/frame/transaction-payment", default-features = false }
pallet-transaction-payment-rpc = { path = "../polkadot-sdk/substrate/frame/transaction-payment/rpc", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { path = "../polkadot-sdk/substrate/frame/transaction-payment/rpc/runtime-api", default-features = false }
pallet-treasury = { path = "../polkadot-sdk/substrate/frame/treasury", default-features = false }
pallet-utility = { path = "../polkadot-sdk/substrate/frame/utility", default-features = false }
pallet-vesting = { path = "../polkadot-sdk/substrate/frame/vesting", default-features = false }
pallet-proxy = { path = "../polkadot-sdk/substrate/frame/proxy", default-features = false }

sc-basic-authorship = { path = "../polkadot-sdk/substrate/client/basic-authorship" }
sc-block-builder = { path = "../polkadot-sdk/substrate/client/block-builder" }
sc-chain-spec = { path = "../polkadot-sdk/substrate/client/chain-spec" }
sc-cli = { path = "../polkadot-sdk/substrate/client/cli" }
sc-client-api = { path = "../polkadot-sdk/substrate/client/api" }
sc-consensus = { path = "../polkadot-sdk/substrate/client/consensus/common" }
sc-consensus-aura = { path = "../polkadot-sdk/substrate/client/consensus/aura" }
sc-consensus-slots = { path = "../polkadot-sdk/substrate/client/consensus/slots" }
sc-executor = { path = "../polkadot-sdk/substrate/client/executor" }
sc-keystore = { path = "../polkadot-sdk/substrate/client/keystore" }
sc-network = { path = "../polkadot-sdk/substrate/client/network" }
sc-network-common = { path = "../polkadot-sdk/substrate/client/network/common" }
sc-network-sync = { path = "../polkadot-sdk/substrate/client/network/sync" }
sc-rpc = { path = "../polkadot-sdk/substrate/client/rpc" }
sc-rpc-api = { path = "../polkadot-sdk/substrate/client/rpc-api" }
sc-service = { path = "../polkadot-sdk/substrate/client/service" }
sc-telemetry = { path = "../polkadot-sdk/substrate/client/telemetry" }
sc-transaction-pool = { path = "../polkadot-sdk/substrate/client/transaction-pool" }
sc-transaction-pool-api = { path = "../polkadot-sdk/substrate/client/transaction-pool/api" }
sc-utils = { path = "../polkadot-sdk/substrate/client/utils" }

sp-api = { path = "../polkadot-sdk/substrate/primitives/api", default-features = false }
sp-application-crypto = { path = "../polkadot-sdk/substrate/primitives/application-crypto", default-features = false }
sp-arithmetic = { path = "../polkadot-sdk/substrate/primitives/arithmetic", default-features = false }
sp-blockchain = { path = "../polkadot-sdk/substrate/primitives/blockchain", default-features = false }
sp-block-builder = { path = "../polkadot-sdk/substrate/primitives/block-builder", default-features = false }
sp-consensus = { path = "../polkadot-sdk/substrate/primitives/consensus/common", default-features = false }
sp-consensus-aura = { path = "../polkadot-sdk/substrate/primitives/consensus/aura", default-features = false }
sp-consensus-slots = { path = "../polkadot-sdk/substrate/primitives/consensus/slots", default-features = false }
sp-core = { path = "../polkadot-sdk/substrate/primitives/core", default-features = false }
sp-inherents = { path = "../polkadot-sdk/substrate/primitives/inherents", default-features = false }
sp-io = { path = "../polkadot-sdk/substrate/primitives/io", default-features = false }
sp-keystore = { path = "../polkadot-sdk/substrate/primitives/keystore", default-features = false }
sp-offchain = { path = "../polkadot-sdk/substrate/primitives/offchain", default-features = false }
sp-runtime = { path = "../polkadot-sdk/substrate/primitives/runtime", default-features = false }
sp-runtime-interface = { path = "../polkadot-sdk/substrate/primitives/runtime-interface", default-features = false }
sp-session = { path = "../polkadot-sdk/substrate/primitives/session", default-features = false }
sp-staking = { path = "../polkadot-sdk/substrate/primitives/staking", default-features = false }
sp-state-machine = { path = "../polkadot-sdk/substrate/primitives/state-machine", default-features = false }
sp-std = { path = "../polkadot-sdk/substrate/primitives/std", default-features = false }
sp-timestamp = { path = "../polkadot-sdk/substrate/primitives/timestamp", default-features = false }
sp-transaction-pool = { path = "../polkadot-sdk/substrate/primitives/transaction-pool", default-features = false }
sp-trie = { path = "../polkadot-sdk/substrate/primitives/trie", default-features = false }
sp-version = { path = "../polkadot-sdk/substrate/primitives/version", default-features = false }

substrate-build-script-utils = { path = "../polkadot-sdk/substrate/utils/build-script-utils" }
substrate-frame-rpc-system = { path = "../polkadot-sdk/substrate/utils/frame/rpc/system" }
substrate-prometheus-endpoint = { path = "../polkadot-sdk/substrate/utils/prometheus" }
substrate-test-runtime-client = { path = "../polkadot-sdk/substrate/test-utils/runtime/client" }
substrate-test-runtime = { path = "../polkadot-sdk/substrate/test-utils/runtime/" }
substrate-test-client = { path = "../polkadot-sdk/substrate/test-utils/client" }
substrate-wasm-builder = { path = "../polkadot-sdk/substrate/utils/wasm-builder" }

try-runtime-cli = { path = "../polkadot-sdk/substrate/utils/frame/try-runtime/cli" }

halo2_proofs = { git = "https://github.com/Cardinal-Cryptography/pse-halo2", branch = "aleph", default-features = false }

# Local crates

aleph-runtime = { path = "bin/runtime" }
aleph-runtime-interfaces = { path = "runtime-interfaces", default-features = false }
baby-liminal-extension = { path = "baby-liminal-extension", default-features = false }
finality-aleph = { path = "finality-aleph" }
network-clique = { path = "clique" }
rate-limiter = { path = "rate-limiter" }
pallet-aleph = { path = "pallets/aleph", default-features = false }
pallet-committee-management = { path = "pallets/committee-management", default-features = false }
pallet-elections = { path = "pallets/elections", default-features = false }
pallet-feature-control = { path = "pallets/feature-control", default-features = false }
pallet-operations = { path = "pallets/operations", default-features = false }
pallets-support = { path = "pallets/support", default-features = false }
pallet-vk-storage = { path = "pallets/vk-storage", default-features = false }
primitives = { path = "primitives", default-features = false }
