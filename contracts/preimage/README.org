* Preimage contract

This contract utilizes the /preimage relation/ in a commit-reveal scheme, where revealing does not leak the witness (the commitment value).

It's main purpose is showcasing/benchmarking on-chain verification of a relation using the Poseidon hash function instance as well as showcasing how to call the runtime's the Poseidon hashing via chain extension.

** Generate keys
Generate /pk/ and /vk/ keys using the *cliain* tool:

#+BEGIN_SRC bash
cargo run -- snark-relation generate-keys preimage
#+END_SRC

** Register v-key
Register the just created key with the pallet:

#+BEGIN_SRC bash
cargo run -- --seed //Alice --node ws://127.0.0.1:9943 baby-liminal store-key --identifier 'pimg' --vk-file preimage.groth16.vk.bytes
#+END_SRC

** Generate proof
Create a proof that we know a /preimage/ witness (7u64, argument is passed as the corresponding /Fr/ field element) that hashes to the public /hash/ value using a Poseidon instance that operates in that field:

#+BEGIN_SRC bash
cargo run snark-relation generate-proof --proving-key-file preimage.groth16.pk.bytes preimage --hash 6921429189085971870,65421081288123788,1703765854531614015,5826733087857826612 --preimage 64424509425,1721329240476523535,18418692815241631664,3824455624000121028
#+END_SRC

** upload and instantiate the contract

Change directory to the one containing the contract code and build it:

#+BEGIN_SRC bash
cargo contract build --release
#+END_SRC

#+BEGIN_SRC bash
ADDRESS=$(cargo contract instantiate --url ws://127.0.0.1:9943 --suri //Alice --constructor new --skip-confirm --output-json | jq -r '.contract')
#+END_SRC

** interact with the contract

*** make a commitment

#+BEGIN_SRC bash
cargo contract call --url ws://127.0.0.1:9943 --contract $ADDRESS --message commit --args '[6921429189085971870, 65421081288123788, 1703765854531614015, 5826733087857826612]' --skip-confirm --suri //Alice
#+END_SRC

*** get callers commitment

#+BEGIN_SRC bash
cargo contract call --url ws://127.0.0.1:9943 --contract $ADDRESS --message commitment --dry-run --suri //Alice
#+END_SRC

*** reveal commitment
Contract accepts proof as a vector of bytes, you can get that representation by reading the previously generated proof file:

#+BEGIN_SRC bash
cat preimage.groth16.proof.bytes | hd
#+END_SRC

Pass the values as a vector to the contract to obtain the tx cost measurements:

#+BEGIN_SRC bash
cargo contract call --url ws://127.0.0.1:9943 --suri //Alice --contract $ADDRESS --message reveal --skip-confirm --args '[0x83, 0x6a, 0xc2, 0xc4, 0xd5, 0xc1, 0x44, 0x51, 0x84, 0x84, 0xce, 0xfe, 0x93, 0xdd, 0xfe, 0x2f, 0x10, 0x0e, 0xbc, 0x63, 0xfc, 0x05, 0x98, 0x90, 0x8c, 0xb7, 0xb0, 0x2d, 0xed, 0x81, 0xc7, 0xaa, 0xc7, 0x89, 0x28, 0x2f, 0xe3, 0x50, 0xb4, 0x63, 0xac, 0xf7, 0x88, 0xe7, 0x91, 0xfb, 0x76, 0x0b, 0x68, 0x3c, 0x29, 0xb1, 0x2e, 0xaf, 0x7e, 0xad, 0xd9, 0x49, 0x04, 0x2a, 0xf4, 0x46, 0x9b, 0x61, 0x74, 0x12, 0xc3, 0x48, 0x6c, 0xc3, 0x3f, 0x57, 0x4b, 0x94, 0x5b, 0xda, 0xde, 0xeb, 0x67, 0x2b, 0x7a, 0xf5, 0xc8, 0x6a, 0x81, 0xdc, 0xa9, 0x83, 0x5f, 0x47, 0x7e, 0x79, 0x40, 0x4c, 0x8b, 0x06, 0xb3, 0x98, 0x6a, 0x10, 0xe7, 0xa1, 0xd6, 0xa9, 0x28, 0x0a, 0xf7, 0x0c, 0x6b, 0x17, 0x68, 0xe9, 0xbf, 0x66, 0x75, 0x47, 0x4e, 0x2f, 0x4a, 0xc8, 0x13, 0x9b, 0x9d, 0x1b, 0xb4, 0x9c, 0xde, 0x79, 0x48, 0xbd, 0xf9, 0x88, 0x82, 0xbc, 0x43, 0x70, 0x7d, 0x4b, 0xc0, 0x4d, 0xa6, 0xb0, 0xcb, 0x02, 0xe9, 0x11, 0x9e, 0xf3, 0x11, 0x96, 0x59, 0xfc, 0xc2, 0x9e, 0x59, 0xc5, 0xe5, 0x2f, 0xda, 0x32, 0x5d, 0x76, 0x52, 0xc1, 0xdd, 0xfe, 0x09, 0x38, 0x84, 0x68, 0xcc, 0x48, 0xec, 0x26, 0x2b, 0x30, 0xfb, 0xee, 0xc8, 0xf0, 0x47, 0xe1, 0x55, 0xac, 0xb1, 0x2f, 0x96, 0x8d, 0x33, 0x7b, 0xeb, 0x99]'
#+END_SRC

*** on-chain evaluation of Poseidon hash function
=1:1 Poseidon hashing=
#+BEGIN_SRC bash
cargo contract call --url ws://127.0.0.1:9943 --suri //Alice --contract $ADDRESS --message one-to-one --skip-confirm
#+END_SRC

=2:1 Poseidon hashing=
#+BEGIN_SRC bash
cargo contract call --url ws://127.0.0.1:9943 --suri //Alice --contract $ADDRESS --message two-to-one --skip-confirm
#+END_SRC
