---
name: Nightly pipeline integration tests
on:
  workflow_dispatch:
  schedule:
    - cron: '00 01 * * *'
  push:
    branches:
      - 'release-*'

concurrency:
  group: "${{ github.ref }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  run-tests:
    name: Run all unit and integration workspace tests
    runs-on: [self-hosted, Linux, X64, large]
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v4

      - name: Run Test Suite
        uses: actions-rs/cargo@v1
        with:
          command: test

  run-tests-liminal:
    name: Run all unit and integration workspace tests (including liminal features)
    runs-on: [self-hosted, Linux, X64, large]
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v4

      - name: Run Test Suite
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features "liminal-try-runtime liminal-runtime-benchmarks"

  slack-notification:
    name: Slack notification
    runs-on: ubuntu-20.04
    needs: [run-tests, run-tests-liminal]
    if: ${{ !cancelled() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send Slack message
        uses: ./.github/actions/slack-notification
        with:
          notify-on: "failure"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_ONDUTY }}
