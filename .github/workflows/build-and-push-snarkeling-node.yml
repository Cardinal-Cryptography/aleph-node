name: Build and push snarkeling node docker image

on:
  pull_request:
    branches: [ snarkeling ]
    paths:
      - aggregator/**
      - bin/node/**
      - bin/runtime/**
      - finality-aleph/**
      - pallets/**
      - primitives/**
      - docker/**
      - .github/workflows/build-and-push-snarkeling-node.yml
  push:
    branches: [ snarkeling ]
    paths:
      - aggregator/**
      - bin/node/**
      - bin/runtime/**
      - finality-aleph/**
      - pallets/**
      - primitives/**
      - docker/**
      - .github/workflows/build-and-push-snarkeling-node.yml
  workflow_dispatch:
    inputs:
      deploy:
        description: Whether to perform deployment step
        required: false
        type: boolean

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-image:
    name: Build binary
    runs-on: ubuntu-20.04
    steps:
      - name: GIT | Checkout source code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.6.1'

      - name: Install WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Build binary and runtime
        run: cargo build --profile production -p aleph-node

      - name: GIT | Get branch name and commit SHA
        id: get_branch
        uses: ./.github/actions/get-branch

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.9.1

      - name: Build and push latest docker image
        env:
          RELEASE_IMAGE: public.ecr.aws/p6e8q1z1/snarkeling:${{ steps.get_branch.outputs.sha_short }}
        uses: docker/build-push-action@v3.3.0
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: ./docker/Dockerfile
          push: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.deploy || github.event_name == 'push' }}
          tags: ${{ env.RELEASE_IMAGE }}

      - name: Cleanup cache
        uses: ./.github/actions/post-cache
