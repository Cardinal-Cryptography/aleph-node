name: Build aleph-node and aleph-runtime artifacts

on:
  workflow_call:
    inputs:
      ref:
        description: 'The `ref` argument for `actions/checkout@v2`'
        required: false
        type: string
      artifact-prefix:
        description: 'A string that will be prepended to the artifact names'
        required: false
        type: string

jobs:
  build:
    name: Build binary artifacts
    runs-on: self-hosted
    env:
      RUST_BACKTRACE: full
      SECRETS_AWS_MAINNET_ACCESS_KEY_ID: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
      SECRETS_AWS_MAINNET_SECRET_ACCESS_KEY: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
    steps:
      - name: GIT | Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}

      - name: GIT | Get branch name and commit SHA
        id: get_branch
        uses: ./.github/actions/get-branch

      - name: RUST | Install Rust toolchain
        uses: actions-rs/toolchain@v1

      - name: DEPS | Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.6.1'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: RUST | Install WASM target
        run: rustup target add wasm32-unknown-unknown

      #- name: Restore cache
      #  uses: ./.github/actions/restore-cache
      #  with:
      #    target-key: release
      #    cache-version: v2

      - name: CARGO | Build binary and runtime
        run: cargo build --profile production -p aleph-node

      - name: ARTIFACT | Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-release-node
          path: target/production/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: ARTIFACT | Upload release runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-release-runtime
          path: target/production/wbuild/aleph-runtime/aleph_runtime.compact.wasm
          if-no-files-found: error
          retention-days: 7

      - name: S3 CI | Copy binary to S3 bucket
        if: env.SECRETS_AWS_MAINNET_ACCESS_KEY_ID != '' && env.SECRETS_AWS_MAINNET_SECRET_ACCESS_KEY != ''
        uses: actions/copy-to-ci-s3-bucket
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          binary-dir: target/production
          binary-file: aleph-node
          s3bucket-url: s3://${{ secrets.CI_MAINNET_S3BUCKET_NAME }}/builds/aleph-node/commits/${{ steps.get_branch.outputs.sha_short }}/aleph-node
          s3bucket-file: aleph-node-${{ steps.get_branch.outputs.sha_short }}.tar.gz

      - name: S3 CI | Copy runtime to S3 bucket
        if: env.SECRETS_AWS_MAINNET_ACCESS_KEY_ID != '' && env.SECRETS_AWS_MAINNET_SECRET_ACCESS_KEY != ''
        uses: actions/copy-to-ci-s3-bucket
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          binary-dir: target/production/wbuild/aleph-runtime
          binary-file: aleph_runtime.compact.wasm
          s3bucket-url: s3://${{ secrets.CI_MAINNET_S3BUCKET_NAME }}/builds/aleph-node/commits/${{ steps.get_branch.outputs.sha_short }}/aleph-runtime
          s3bucket-file: aleph-runtime-${{ steps.get_branch.outputs.sha_short }}.tar.gz

      - name: CARGO | Build test binary
        run: cargo build --release -p aleph-node --features "short_session enable_treasury_proposals only_legacy"

      - name: ARTIFACT | Upload test binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-test-node
          path: target/release/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: ARTIFACT | Upload test runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-test-runtime
          path: target/release/wbuild/aleph-runtime/aleph_runtime.compact.wasm
          if-no-files-found: error
          retention-days: 7

      - name: S3 CI | Copy test binary to S3 bucket
        if: env.SECRETS_AWS_MAINNET_ACCESS_KEY_ID != '' && env.SECRETS_AWS_MAINNET_SECRET_ACCESS_KEY != ''
        uses: actions/copy-to-ci-s3-bucket
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          binary-dir: target/release
          binary-file: aleph-node
          s3bucket-url: s3://${{ secrets.CI_MAINNET_S3BUCKET_NAME }}/builds/aleph-node/commits/${{ steps.get_branch.outputs.sha_short }}/aleph-test-node
          s3bucket-file: aleph-test-node-${{ steps.get_branch.outputs.sha_short }}.tar.gz

      - name: S3 CI | Copy test runtime to S3 bucket
        if: env.SECRETS_AWS_MAINNET_ACCESS_KEY_ID != '' && env.SECRETS_AWS_MAINNET_SECRET_ACCESS_KEY != ''
        uses: actions/copy-to-ci-s3-bucket
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          binary-dir: target/release/wbuild/aleph-runtime
          binary-file: aleph_runtime.compact.wasm
          s3bucket-url: s3://${{ secrets.CI_MAINNET_S3BUCKET_NAME }}/builds/aleph-node/commits/${{ steps.get_branch.outputs.sha_short }}/aleph-test-runtime
          s3bucket-file: aleph-test-runtime-${{ steps.get_branch.outputs.sha_short }}.tar.gz

      #- name: Cleanup cache
      #  uses: ./.github/actions/post-cache
