---
name: Check excluded packages

on:
  workflow_call:

jobs:
  main:
    name: Check excluded packages
    runs-on: [self-hosted, Linux, X64, large]
    env:
      CARGO_INCREMENTAL: 0
      RUSTC_WRAPPER: sccache
      CARGO_CONTRACT_VERSION: 3.0.1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install rustup and rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v4

      - name: Read contracts toolchain
        id: contracts-toolchain-channel
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: 'contracts/rust-toolchain.toml'
          field: 'toolchain.channel'

      - name: Read aleph-client toolchain
        id: aleph-client-toolchain-channel
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: 'aleph-client/rust-toolchain.toml'
          field: 'toolchain.channel'

      - name: Install prerequisites
        env:
          RUST_TOOLCHAIN: ${{ steps.aleph-client-toolchain-channel.outputs.value }}
          RUST_CONTRACTS_TOOLCHAIN: ${{ steps.contracts-toolchain-channel.outputs.value }}
        # yamllint disable rule:line-length
        run: |
          rustup toolchain install '${{ env.RUST_TOOLCHAIN }}'
          rustup toolchain install '${{ env.RUST_CONTRACTS_TOOLCHAIN }}'
          rustup component add rust-src --toolchain '${{ env.RUST_CONTRACTS_TOOLCHAIN }}'

          mkdir -p '/tmp/contracts_toolchain/${{ env.RUST_CONTRACTS_TOOLCHAIN }}/'
          mkdir -p '/tmp/${{ env.RUST_TOOLCHAIN }}/'

          export WASM_BUILD_WORKSPACE_HINT=${PWD}
          export CARGO_TARGET_DIR='/tmp/contracts_toolchain/${{ env.RUST_CONTRACTS_TOOLCHAIN }}/target/'

          cargo '+${{ env.RUST_CONTRACTS_TOOLCHAIN }}' \
            install --version '${{ env.CARGO_CONTRACT_VERSION }}' \
            --force --locked cargo-contract

          export CARGO_TARGET_DIR='/tmp/${{ env.RUST_TOOLCHAIN }}/target/'

          cargo '+${{ env.RUST_TOOLCHAIN }}' \
            install aleph-zero-cargo-nono --locked
        # yamllint enable rule:line-length

      - name: Check excluded packages
        env:
          RUSTC_WRAPPER: ""
          RUSTC_WORKSPACE_WRAPPER: sccache
        run: |
          ./scripts/run_checks_on_excluded_packages.sh

      - name: Assert that packages are compatible with no-std
        env:
          CHECK: aleph-zero-cargo-nono check --no-default-features
        run: |
          # `sp-io/src/lib.rs` from `aleph-v0.9.38` cannot be parsed with
          # `syn` from `aleph-zero-cargo-nono`; we have to wait for
          # a version bump
          #
          # cd baby-liminal-extension/
          # ${{ env.CHECK }}
          # ${{ env.CHECK }} --features ink

          cd poseidon/
          ${{ env.CHECK }}
          ${{ env.CHECK }} --features circuit

          cd ../relations/ark/
          ${{ env.CHECK }}
          ${{ env.CHECK }} --features circuit
