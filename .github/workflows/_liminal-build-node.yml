---
#  This workflow builds aleph-node with feature liminal
#  features enabled. Those binaries MUST NOT be used in the production.
name: Build/check liminal node
on:
  workflow_call:
    inputs:
      check-only:
        description: 'Set to true if compilation linking phase should be omitted'
        required: true
        type: boolean
        default: false

jobs:
  main:
    name: Build or check liminal node
    runs-on: [self-hosted, Linux, X64, large]
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      CARGO_COMMAND: ${{ inputs.check-only && 'check' || 'build' }}
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v6
        with:
          targets: wasm32-unknown-unknown

      - name: ${{ env.CARGO_COMMAND }} test liminal aleph-node binary
        run: |
          cargo ${{ env.CARGO_COMMAND }} --release -p aleph-node --features 'liminal'

      - name: Upload liminal aleph-node binary to GH Artifacts
        if: ${{ inputs.check-only != true }}
        uses: actions/upload-artifact@v4
        with:
          name: aleph-node-liminal
          path: target/release/aleph-node
          if-no-files-found: error
          retention-days: 7
