---
#  This workflow builds aleph-e2e-client-image
name: Build aleph-e2e-client image
on:
  workflow_call:
    inputs:
      ref:
        description: "git ref: hash, branch, tag or 'mainnet' or 'testnet'"
        type: string
        required: true
      push:
        required: false
        description: 'Set to true to push aleph-e2e-client to ECR'
        type: boolean
        default: false
    outputs:
      aleph-e2e-client-image:
        description: Built image tag of aleph-e2e-client
        value: ${{ jobs.build-artifacts.outputs.aleph-e2e-client-image }}

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    if: ${{ inputs.push == true }}
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  build-artifacts:
    name: Build aleph-e2e-client image
    if: ${{ always() }}
    needs: [check-vars-and-secrets]
    runs-on: [self-hosted, Linux, X64, large]
    outputs:
      # yamllint disable-line rule:line-length
      aleph-e2e-client-image: ${{ steps.build-and-push-aleph-e2e-client-image.outputs.aleph-e2e-client-image }}
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Call action get-ref-properties
        id: get-ref-properties
        uses: Cardinal-Cryptography/github-actions/get-ref-properties@v7

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v7
        with:
          targets: wasm32-unknown-unknown

      - name: Build and push aleph-e2e-client image
        id: build-and-push-aleph-e2e-client-image
        uses: ./.github/actions/build-and-push-aleph-e2e-client-image
        with:
          ref: ${{ inputs.ref }}
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          ecr-public-host: ${{ vars.ECR_PUBLIC_HOST }}
          ecr-public-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}
          push: ${{ inputs.push && 'true' || 'false' }}
