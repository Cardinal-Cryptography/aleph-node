name: Deploy to Testnet

on:
  release:
    types: [prereleased]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}

jobs:
  deploy-testnet:
    name: Deploy new aleph-node image to Testnet EKS
    runs-on: ubuntu-latest
    environment: 
      name: testnet
    env:
      AWS_REGION: us-east-1 # this region is used by all public ECR repos
    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v2

      - name: GIT | Get branch info & current commit sha.
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Public Amazon ECR
        id: login-public-ecr
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Tag and push image for Testnet
        env:
          DEVNET_IMAGE: public.ecr.aws/p6e8q1z1/aleph-node:${{ steps.vars.outputs.sha_short }}
          TESTNET_IMAGE: public.ecr.aws/p6e8q1z1/aleph-node:${{ steps.vars.outputs.branch }}
        run: |
          export image_not_exist=$(docker manifest inspect ${{ env.DEVNET_IMAGE }} &> /dev/null ; echo $?)

          if [ $image_not_exist -eq 1 ]; then
            echo "::error title=Wrong docker image tag::Docker image ${{ env.DEVNET_IMAGE }} doesn't exist"
            exit 1
          else
            docker pull ${{ env.DEVNET_IMAGE }}
            docker tag ${{ env.DEVNET_IMAGE }} ${{ env.TESTNET_IMAGE }}
            docker push ${{ env.TESTNET_IMAGE }}
          fi

      - name: GIT | Checkout aleph-apps repo
        uses: actions/checkout@master
        with:
          ref: testnet
          repository: Cardinal-Cryptography/aleph-apps
          token: ${{ secrets.CI_GH_TOKEN }}
          path: "aleph-apps"

      - name: Init kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.8.6"

      - name: Update aleph-node docker image and trigger ArgoCD deploy for Testnet
        env:
          TESTNET_IMAGE: public.ecr.aws/p6e8q1z1/aleph-node:${{ steps.vars.outputs.branch }}
          REGIONS_AWS: 'eu-central-1,eu-west-1,eu-west-2,us-east-1,us-east-2'
        run: |
          IFS="," read -a region_array <<< ${{ env.REGIONS_AWS }}
          export aleph_path=$(pwd)
          for i in "${region_array[@]}"; do
            # Deploy new image version for archivist
            cd ${aleph_path}/aleph-apps/aleph-node-archivists/overlays/testnet/${i}
            kustomize edit set image "aleph-node-archivist-image-placeholder=${{ env.TESTNET_IMAGE }}"

            # Deploy new image version for validator
            cd ${aleph_path}/aleph-apps/aleph-node-validators/overlays/testnet/${i}
            kustomize edit set image "aleph-node-validator-image-placeholder=${{ env.TESTNET_IMAGE }}"
          done

      - name: GIT | Commit changes to aleph-apps repository.
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: AlephZero Automation
          author_email: alephzero@10clouds.com
          message: "Updating Testnet docker image tag for pre-release: ${{ steps.vars.outputs.branch }}"
          add: "*.yaml"
          cwd: "aleph-apps"
          branch: testnet
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GH_TOKEN }}
