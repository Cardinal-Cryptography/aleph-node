---
name: Runs button e2e test on push to main branch

on:
  workflow_call:
    inputs:
      deploy:
        description: Deploy the button contracts to devnet and trigger services update
        required: false
        default: false
        type: boolean

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  build-test-node-and-runtime:
    needs: [check-vars-and-secrets]
    name: Build test node and runtime
    uses: ./.github/workflows/_build-test-node-and-runtime.yml

  store-test-node-and-runtime:
    name: Store test node and runtime in Devnet bucket
    runs-on: ubuntu-20.04
    needs: [build-test-node-and-runtime]
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4

      - name: Store test node and runtime
        uses: ./.github/actions/store-node-and-runtime
        with:
          profile: test
          aws-access-key-id: ${{ secrets.AWS_DEVNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEVNET_SECRET_ACCESS_KEY }}
          aws-bucket: ${{ secrets.CI_DEVNET_S3BUCKET_NAME }}

  build-test-node-image-and-e2e-client-image:
    needs: [build-test-node-and-runtime]
    uses: ./.github/workflows/_build-test-node-and-e2e-client-image.yml

  run-e2e-button-contracts-tests:
    needs: [build-test-node-image-and-e2e-client-image]
    name: Run e2e button game contract tests
    runs-on: [self-hosted, Linux, X64, large]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          deploy-button: true
          clean-button: true
          test-case: button
          node-count: 1
        timeout-minutes: 20

  deploy-button:
    if: inputs.deploy == true
    name: Deploy the button contracts to devnet and trigger services update
    needs: [run-e2e-button-contracts-tests]
    uses: ./.github/workflows/contracts-deploy.yml
    secrets: inherit

  change-pr-labels:
    name: Change pull request labels
    needs: [run-e2e-button-contracts-tests]
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Remove deployment request label if exists
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: 'trigger:run-button-e2e-tests'
          github_token: ${{ secrets.CI_GH_TOKEN }}

      - name: Remove failed label if exists
        if: >
          github.event_name == 'pull_request' &&
          needs.run-e2e-button-contracts-tests.result == 'success'
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: 'state:button-e2e-tests-failed'
          github_token: ${{ secrets.CI_GH_TOKEN }}

      - name: Add label to mark that tests succeeded
        if: >
          github.event_name == 'pull_request' &&
          needs.run-e2e-button-contracts-tests.result == 'success'
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: 'state:button-e2e-tests-succeeded'
          github_token: ${{ secrets.CI_GH_TOKEN }}

      - name: Remove success label if exists
        if: >
          github.event_name == 'pull_request' &&
          needs.run-e2e-button-contracts-tests.result == 'failure'
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: 'state:button-e2e-tests-succeeded'
          github_token: ${{ secrets.CI_GH_TOKEN }}

      - name: Add label to mark that tests failed
        if: >
          github.event_name == 'pull_request' &&
          needs.run-e2e-button-contracts-tests.result == 'failure'
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: 'state:button-e2e-tests-failed'
          github_token: ${{ secrets.CI_GH_TOKEN }}

  send-slack-notification:
    name: Send Slack notification about workflow status
    runs-on: ubuntu-20.04
    needs: [deploy-button]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send Slack message
        uses: ./.github/actions/slack-notification
        with:
          notify-on: "failure"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TRACK_APPLICATIONS }}
