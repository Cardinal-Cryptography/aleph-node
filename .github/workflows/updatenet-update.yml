---
name: UpdateNet Update

on:
  workflow_dispatch:
    inputs:
      name:
        description: Name of deployment (updatenet)
        required: true
        type: string
      destination:
        description: Node image tag
        required: true
        type: string

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  update-updatenet:
    needs: [check-vars-and-secrets]
    name: Update updatenet
    runs-on: ubuntu-20.04
    outputs:
      deployment-id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - name: Validate inputs
        shell: bash
        run: |
          if [[ ! "${{ inputs.name }}" =~ ^[a-z0-9][a-z0-9\-]{4,30}$ ]]; then
            echo "!!! Invalid updatenet name"
            exit 1
          fi
          if [[
            "${{ inputs.destination }}" != "" && \
            ! "${{ inputs.destination }}" =~ ^[a-f0-9]{7}$
          ]]
          then
            echo "!!! Invalid destination node image tag"
            exit 1
          fi

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Start featurenet Deployment
        uses: bobheadxi/deployments@v1.1.0
        id: deployment
        with:
          step: start
          token: ${{ secrets.CI_GH_TOKEN }}
          env: updatenet-${{ inputs.name }}
          override: true

      - name: Update featurenet data, app and deploy it
        uses: ./.github/actions/create-featurenet
        with:
          gh-ci-token: ${{ secrets.CI_GH_TOKEN }}
          argo-sync-user-token: ${{ secrets.ARGO_SYNC_USER_TOKEN }}
          repo-apps-name: ${{ secrets.REPO_ARGOCD_APPS_NAME }}
          argo-host: ${{ secrets.ARGOCD_DEVNET_HOST }}
          # yamllint disable-line rule:line-length
          aleph-node-image: ${{ inputs.destination }}
          ecr-public-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}
          aws-access-key-id: ${{ secrets.AWS_DEVNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEVNET_SECRET_ACCESS_KEY }}
          featurenet-keys-s3bucket-name: ${{ secrets.FEATURENET_KEYS_S3BUCKET_NAME }}
          featurenet-name: fe-updnet-${{ inputs.name }}
          update: 'true'

      - name: Wait for the testnet aleph-node binary to accept some blocks
        uses: juliangruber/sleep-action@v2.0.0
        with:
          time: 5m

      - name: Finish featurenet Deployment
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.CI_GH_TOKEN }}
          status: ${{ job.status }}
          env: updatenet-${{ inputs.name }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          # yamllint disable-line rule:line-length
          env_url: https://dev.azero.dev/?rpc=wss%3A%2F%2Fws-fe-updnet-${{ inputs.name }}.dev.azero.dev#/explorer
