---
#  This workflow run e2e tests as jobs (ie, in parallel)
name: Run e2e tests
on:
  workflow_call:
    inputs:
      aleph-e2e-client-image:
        description: 'aleph-e2e-client image'
        required: true
        type: string

jobs:
  run-e2e-finalization-test:
    name: Run e2e finalization test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: finalization::finalization
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-rewards-disable-node-test:
    name: Run e2e reward points - disable node test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: rewards::disable_node
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-token-transfer-test:
    name: Run e2e token transfer test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: token_transfer
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-fee-calculation-test:
    name: Run e2e fee calculation test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: fee_calculation
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-channeling-fee-test:
    name: Run e2e channeling fee test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: channeling_fee_and_tip
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-treasury-access-test:
    name: Run e2e treasury access test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: treasury_access
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-batch-transactions-test:
    name: Run e2e batch transactions test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: batch_transactions
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-staking-era-payouts-test:
    name: Run e2e staking era payouts test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: staking_era_payouts
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-staking-new-validator-test:
    name: Run e2e staking new validator test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: staking_new_validator
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-change-validators-test:
    name: Run e2e change validators test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: change_validators
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-fail-change-validators-test:
    name: Run e2e fail change validators test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: fail_changing_validators
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-validators-rotate:
    name: Run validators rotation test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: validators_rotate
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-era-payout:
    name: Run era payout test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: era_payout::era_payout
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-era-validators:
    name: Run era validators test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: era_validators
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-rewards-force-new-era:
    name: Run force new era test to check rewards
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: rewards::force_new_era
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-rewards-stake-change:
    name: Run reward points with stake changed test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: rewards::points_stake_change
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-rewards-change-stake-force-new-era:
    name: Run reward points with stake changed and new era forced test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: rewards::change_stake_and_force_new_era
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-rewards-points-basic:
    name: Run basic reward points calculation test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: points_basic
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-authorities-are-staking:
    name: Run authorities are staking test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: authorities_are_staking
          node-count: 6
          reserved-seats: 3
          non-reserved-seats: 3
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-ban-automatic:
    name: Run ban automatic test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: ban_automatic
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-ban-manual:
    name: Run ban manual test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: ban_manual
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-ban-counter-clearing:
    name: Run ban counter clearing test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: clearing_session_count
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-ban-threshold:
    name: Run ban threshold test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: ban_threshold
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-permissionless-ban:
    name: Run permissionless ban test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: permissionless_ban
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-version-upgrade:
    name: Run basic (positive) version-upgrade test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: finality_version::schedule_version_change
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}
        env:
          UPGRADE_VERSION: 1
          UPGRADE_SESSION: 3
          UPGRADE_FINALIZATION_WAIT_SESSIONS: 2

  run-e2e-adder-contract-test:
    name: Run e2e adder contract test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v7
        with:
          targets: wasm32-unknown-unknown
          components: rust-src

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          deploy-adder: true
          test-case: adder
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-finality-version-change:
    name: Run finality version change test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: finality_version::finality_version_change
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-reserved-01:
    name: Run committee split test with node-0 and node-1 dead
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_reserved_01
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-reserved-12:
    name: Run committee split test with node-1 and node-2 dead
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_reserved_12
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-reserved-02:
    name: Run committee split test with node-0 and node-2 dead
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_reserved_02
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-test-success-without-any-deads:
    name: Run committee split test without any deads
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_success_without_any_deads
          follow-up-finalization-check: true
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-test-success-with-one-dead:
    name: Run committee split test with one node dead
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_success_with_one_dead
          follow-up-finalization-check: true
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-set-emergency-finalizer:
    name: Run set emergency finalizer test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: set_emergency_finalizer_test
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-set-lenient-threshold:
    name: Run set lenient threshold test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: set_lenient_threshold_test
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-chain-dead-scenario:
    needs: [run-e2e-finalization-test]
    name: Run chain dead scenario
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 6
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: chain_dead_scenario
          follow-up-finalization-check: true
          node-count: 6
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-committee-split-test-success-with-all-non-reserved-dead:
    name: Run committee split test with all non-reserved nodes dead
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        env:
          VALIDATOR_COUNT: 7
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: committee_split::split_test_success_with_all_non_reserved_dead
          follow-up-finalization-check: true
          node-count: 7
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-any-proxy:
    name: Run any proxy test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: any_proxy_works
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-staking-proxy:
    name: Run staking proxy test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: staking_proxy_works
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-non-transfer-proxy:
    name: Run non-transfer proxy test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: non_transfer_proxy_works
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-fresh-chain-has-verifier-enabled:
    name: Run fresh chain has verifier enabled test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: fresh_chain_has_verifier_enabled
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}

  run-e2e-verifier-can-be-disabled:
    name: Run verifier can be disabled test
    needs: [run-e2e-finalization-test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run e2e test
        uses: ./.github/actions/run-e2e-test
        with:
          test-case: verifier_can_be_disabled
          follow-up-finalization-check: true
          aleph-e2e-client-image: ${{ inputs.aleph-e2e-client-image }}
