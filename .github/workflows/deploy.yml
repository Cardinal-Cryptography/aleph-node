name: deploy

on:
  workflow_run:
    workflows: ["integration-tests"]
    branches:
      - main
    types:
      - completed

jobs:
  deploy-devnet:
    name: Push latest docker image
    environment:
      name: devnet
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1 # this region is used by all public ECR repos
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      # NOTE this step will download the last succesfully built artifact from the integration-tests workflow
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: integration-tests
          name: aleph-node-image

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ env.AWS_REGION }}

      # NOTE: this step deploys image tagged as latest and used by the devnet environment
      - name: Load, tag, and push latest image
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws/x2t8a1o3
          ECR_REPOSITORY: aleph-node
        run: |
          # load docker image
          docker load -i aleph-node.tar
          # tag docker image, use two tags: `latest` and the sha of the commit that triggered the build
          docker tag aleph-node:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag aleph-node:latest $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          # Login to Amazon ECR
          aws ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          # push all tagged images to ECR
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GithubActions
          SLACK_TITLE: deploy-devnet job has finished
          MSG_MINIMAL: actions url

  deploy-testnet:
    name: Push testnet docker image
    # NOTE: this is a protected environment, this job needs a manual approval from one of the team members
    environment:
      name: testnet
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: integration_tests.yml
          workflow_conclusion: success
          name: aleph-node-image

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ env.AWS_REGION }}

      - name: Load, tag, and push testnet image
        id: build-image
        env:
          ECR_REGISTRY: public.ecr.aws/x2t8a1o3
          ECR_REPOSITORY: aleph-node
        run: |
          docker load -i aleph-node.tar
          docker tag aleph-node:testnet $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag aleph-node:testnet $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          aws ecr-public get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GithubActions
          SLACK_TITLE: deploy-testnet job has finished
          MSG_MINIMAL: actions url
