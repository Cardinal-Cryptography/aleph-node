name: Build aleph-node and aleph-runtime

on:
  workflow_call:
    inputs:
      ref:
        description: 'The `ref` argument for `actions/checkout@v2`'
        required: false
        type: string
      artifact-prefix:
        description: 'A string that will be prepended to the artifact names'
        required: false
        type: string


jobs:
  build:
    name: Build binary artifacts
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}

      - name: Restore cargo-home cache
        uses: actions/cache@v3
        with:
          path: |
            ~/cargo-home
          key: ${{ runner.os }}-cargo-home-v1-${{ hashFiles('**/Cargo.lock') }}

      - name: Checkout docker image
        uses: actions/cache@v2
        with:
          path: |
            image.tar
          key: ${{ runner.os }}-build-docker-v1-${{ hashFiles('**/Cargo.lock') }}

      - name: Build or load our `build` docker image
        shell: bash
        run: |
          if [[ ! -f image.tar ]]; then
            docker build -t aleph-node/build -f nix/Dockerfile.build .
            # build also the test binary
            export CRATES='{ "aleph-node" = ["short_session" "enable_treasury_proposals"]; }'
            docker run -ti -e CRATES --name build.env --volume=$(pwd):/node/build aleph-node/build
            docker commit build.env aleph-node/build
            docker save -o image.tar aleph-node/build
          else
            docker load -i image.tar
          fi

      - name: Build binary and runtime
        shell: bash
        run: |
          docker run -ti --volume=$(pwd):/node/build aleph-node/build

      - name: Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-release-node
          path: result/bin/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: Upload release runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-release-runtime
          path: result/lib/aleph_runtime.compact.wasm
          if-no-files-found: error
          retention-days: 7

      - name: Checkout docker image for the test binary
        uses: actions/cache@v2
        with:
          path: |
            image_test.tar
          key: ${{ runner.os }}-test-build-docker-v1-${{ hashFiles('**/Cargo.lock') }}

      - name: Build test binary
        shell: bash
        run: |
          export CRATES='{ "aleph-node" = ["short_session" "enable_treasury_proposals"]; }'
          docker run -ti -e CRATES --volume=$(pwd):/node/build aleph-node/build

      - name: Upload test binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-test-node
          path: result/bin/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: Upload test runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-prefix }}aleph-test-runtime
          path: result/lib/aleph_runtime.compact.wasm
          if-no-files-found: error
          retention-days: 7
