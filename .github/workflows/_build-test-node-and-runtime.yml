---
#  This workflow builds test version of aleph-node and aleph-runtime, ie with some
#  features enabled. Those binaries MUST NOT be used in the production.
name: Build test node and runtime
on:
  workflow_call:
    inputs:
      ref:
        description: "git ref: hash, branch, tag or 'mainnet' or 'testnet'"
        type: string
        required: true
      build-e2e-tests-targets:
        description: 'Set to true if aleph-node image and aleph-e2e-client should be built'
        type: boolean
        required: false
        default: false
    outputs:
      aleph-e2e-client-image:
        description: Built image tag of aleph-e2e-client
        value: ${{ jobs.build-artifacts.outputs.aleph-e2e-client-image }}

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  build-artifacts:
    name: Build test node and runtime
    needs: [check-vars-and-secrets]
    runs-on: [self-hosted, Linux, X64, large]
    outputs:
      # yamllint disable-line rule:line-length
      aleph-e2e-client-image: ${{ steps.build-and-push-aleph-e2e-client-image.outputs.aleph-e2e-client-image }}
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Call action get-ref-properties
        id: get-ref-properties
        uses: Cardinal-Cryptography/github-actions/get-ref-properties@v5

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v4
        with:
          targets: wasm32-unknown-unknown

      - name: Build test binary and runtime
        run: |
          cargo build --release -p aleph-node \
            --features "short_session enable_treasury_proposals only_legacy"

      - name: Ensure liminal symbols are not present
        run: |
          nm --demangle=rust target/production/aleph-node | grep -q liminal \
            && { echo "Liminal symbols are present"; exit 1; } \
            || echo "Liminal symbols are not present"

      # this is required for some workflows, yet ideally it should not be required
      - name: Upload test binary to GH Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aleph-test-node
          path: target/release/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: Build test docker image
        if: ${{ inputs.build-e2e-tests-targets == true }}
        id: build-image
        run: |
          chmod +x target/release/aleph-node
          docker build --tag aleph-node:latest -f ./docker/Dockerfile .
          docker save -o aleph-node.tar aleph-node:latest

      # this is solely required by action/run-e2e-test.yml, also it should not be required
      - name: Upload test docker image
        if: ${{ inputs.build-e2e-tests-targets == true }}
        uses: actions/upload-artifact@v3
        with:
          name: aleph-test-docker
          path: aleph-node.tar
          if-no-files-found: error
          retention-days: 7

      - name: Build and push aleph-e2e-client image
        id: build-and-push-aleph-e2e-client-image
        if: ${{ inputs.build-e2e-tests-targets == true }}
        uses: ./.github/actions/build-and-push-aleph-e2e-client-image
        with:
          ref: ${{ inputs.ref }}
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          ecr-public-host: ${{ vars.ECR_PUBLIC_HOST }}
          ecr-public-registry: ${{ vars.ECR_PUBLIC_REGISTRY }}
