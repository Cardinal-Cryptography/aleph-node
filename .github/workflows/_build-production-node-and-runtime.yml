---
#  This workflow builds production version of aleph-node and aleph-runtime, ie with some
#  features enabled. Those binaries MUST be used in the production.
name: Build production node and runtime
on:
  workflow_call:

jobs:
  main:
    name: Build production node and runtime
    runs-on: [self-hosted, Linux, X64, large]
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4

      - name: Call action get-ref-properties
        id: get-ref-properties
        # yamllint disable-line rule:line-length
        uses: Cardinal-Cryptography/github-actions/get-ref-properties@v4

      - name: Install Rust toolchain
        uses: Cardinal-Cryptography/github-actions/install-rust-toolchain@v4
        with:
          targets: wasm32-unknown-unknown

      - name: Build production binary and runtime
        run: cargo build --profile production -p aleph-node

      - name: Ensure liminal symbols are not present
        run: |
          nm --demangle=rust target/production/aleph-node | grep -q liminal \
            && { echo "Liminal symbols are present"; exit 1; } \
            || echo "Liminal symbols are not present"

      - name: Upload release binary to GH artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aleph-production-node
          path: target/production/aleph-node
          if-no-files-found: error
          retention-days: 7

      - name: Upload release runtime to GH artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aleph-production-runtime
          path: target/production/wbuild/aleph-runtime/aleph_runtime.compact.compressed.wasm
          if-no-files-found: error
          retention-days: 7
