name: Deploy to Devnet

on:
  workflow_run:
    workflows: ["e2e-tests-main-devnet"]
    branches:
      - main
    types:
      - completed

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}

jobs:
  deploy-devnet:
    if: github.event.workflow_run.conclusion == 'success'
    name: Deploy new aleph-node image to EKS
    environment:
      name: devnet
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
    steps:
      - name: GIT | Checkout
        uses: actions/checkout@v2

      - name: GIT | Get branch info & current commit sha.
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEVNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEVNET_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: GIT | Checkout aleph-apps repo
        uses: actions/checkout@master
        with:
          repository: Cardinal-Cryptography/aleph-apps
          token: ${{ secrets.CI_GH_TOKEN }}
          path: "aleph-apps"

      - name: Init kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.8.6"

      - name: Setup kubectl
        uses: azure/setup-kubectl@v2.0

      - name: Run fork-off update
        env:
          RELEASE_TAG: ${{ steps.vars.outputs.sha_short }}

        run: |
          #!/bin/bash

          #setup jq
          curl -sS https://webinstall.dev/jq | bash
          export PATH=${HOME}/.local/bin:"$PATH"

          SYSTEM_VERSION=$(curl -s -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "system_version"}' https://rpc.test.azero.dev | jq -r '.result')
          SUFFIX="-x86_64-linux-gnu"
          TMP_COMMIT_ID=${SYSTEM_VERSION/%$SUFFIX}
          COMMIT_ID=${TMP_COMMIT_ID: -7}
          echo $COMMIT_ID

          if aws s3api head-object --bucket alephzero-devnet-eu-central-1-keys-bucket --key forks/chainspec-${COMMIT_ID}.json; then
            echo "Chainspec exists"
            aws s3 cp s3://alephzero-devnet-eu-central-1-keys-bucket/forks/chainspec-${COMMIT_ID}.json chainspec.skeleton.json
          else
            echo "Chainspec doesn't exist"

            docker run -i --env RUST_BACKTRACE=1 --entrypoint "/usr/local/bin/aleph-node" public.ecr.aws/p6e8q1z1/aleph-node:${COMMIT_ID} bootstrap-chain --raw --base-path /data --chain-id a0dnet1 --account-ids 5D34dL5prEUaGNQtPPZ3yN5Y6BnkfXunKXXz6fo7ZJbLwRRH,5GBNeWRhZc2jXu7D55rBimKYDk8PGk8itRYFTPfC8RJLKG5o,5Dfis6XL8J2P6JHUnUtArnFWndn62SydeP8ee8sG2ky9nfm9,5F4H97f7nQovyrbiq4ZetaaviNwThSVcFobcA5aGab6167dK,5DiDShBWa1fQx6gLzpf3SFBhMinCoyvHM1BWjPNsmXS8hkrW,5EFb84yH9tpcFuiKUcsmdoF7xeeY3ajG1ZLQimxQoFt9HMKR,5DZLHESsfGrJ5YzT3HuRPXsSNb589xQ4Unubh1mYLodzKdVY,5GHJzqvG6tXnngCpG7B12qjUvbo5e4e9z8Xjidk3CQZHxTPZ,5CUnSsgAyLND3bxxnfNhgWXSe9Wn676JzLpGLgyJv858qhoX,5CVKn7HAZW1Ky4r7Vkgsr7VEW88C2sHgUNDiwHY9Ct2hjU8q --sudo-account-id 5F4SvwaUEQubiqkPF8YnRfcN77cLsT2DfG4vFeQmSXNjR7hD > chainspec.skeleton.json

            aws s3 cp chainspec.skeleton.json s3://alephzero-devnet-eu-central-1-keys-bucket/forks/chainspec-${COMMIT_ID}.json
          fi

          docker run -i -v $(pwd):/app public.ecr.aws/p6e8q1z1/fork-off:latest --http-rpc-endpoint=https://rpc.test.azero.dev --initial-spec-path=chainspec.skeleton.json --combined-spec-path=chainspec.json

          aws s3 cp chainspec.json s3://alephzero-devnet-eu-central-1-keys-bucket/chainspec.json

          #stop and clean devnet

          aws eks --region eu-central-1 update-kubeconfig --name alephzero-devnet-eu-central-1-eks

          kubectl delete sts aleph-node-validator -n devnet
          kubectl delete pvc -l app=aleph-node-validator -n devnet

          while [ `kubectl get pods -n devnet --no-headers | grep aleph-node-validator | grep Running | wc -l` -gt 0 ];
          do
            echo "Waiting for pods to be stopped"
            sleep 1
          done

          cd aleph-apps/aleph-node-validators/overlays/devnet/eu-central-1
          kustomize edit set image "aleph-node-validator-image-placeholder=${COMMIT_ID}"
          kustomize edit remove resource send-runtime-hook.yaml
          kustomize build . | kubectl apply -f -

          while [ `kubectl get pods -n devnet --no-headers | grep aleph-node-validator | grep Running | wc -l` -lt 10 ];
          do
            echo "Waiting for pods to be running"
            sleep 1
          done

          sleep 600

          kustomize edit set image "aleph-node-validator-image-placeholder=${RELEASE_TAG}"
          kustomize edit add resource send-runtime-hook.yaml
          kustomize build . | kubectl apply -f -

      - name: GIT | Commit changes to aleph-apps repository.
        uses: EndBug/add-and-commit@v5.1.0
        with:
          author_name: AlephZero Automation
          author_email: alephzero@10clouds.com
          message: "Updating Devnet docker image tag to: ${{ steps.vars.outputs.sha_short }}"
          add: "*.yaml"
          cwd: "aleph-apps"
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GH_TOKEN }}

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GithubActions
          SLACK_TITLE: deploy-devnet-new-test job has finished
          MSG_MINIMAL: actions url
