---
#  This workflow builds aleph-node with feature liminal
#  features enabled. Those binaries MUST NOT be used in the production.
name: Build liminal node
on:
  workflow_call:

jobs:
  main:
    name: Build liminal node
    runs-on: self-hosted
    container:
      image: mikogs/rust-dev:v0.1.0
      env:
        RUSTC_WRAPPER: sccache
        SCACHE_BUCKET: ${{ secrets.CI_MAINNET_S3BUCKET_NAME }}
        SCACHE_REGION: eu-central-1
        SCCACHE_ERROR_LOG: /tmp/sccache/log.txt
        SCACHE_LOG: debug
        SCCACHE_S3_KEY_PREFIX: sccache
        SCCACHE_CACHE_SIZE: 10G
        AWS_ACCESS_KEY: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        RUST_BACKTRACE: full
    steps:
      - name: Start sccache server
        run: |
          mkdir /tmp/sccache
          /usr/local/bin/sccache --start-server &

      - name: Checkout aleph-node source code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: ./.github/actions/install-rust-toolchain
        with:
          targets: wasm32-unknown-unknown

      - name: Build test binary and runtime
        run: |
          cargo build --release -p aleph-node --features "liminal"

      - name: Upload test binary to GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: aleph-node-liminal
          path: target/release/aleph-node
          if-no-files-found: error
          retention-days: 7
