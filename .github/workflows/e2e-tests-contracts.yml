name: e2e-tests-contracts

on:
  pull_request:
    paths:
      - 'contracts/**'
    # branches:
    #   - main
    #   - "release-*"
  push:
    paths:
      - 'contracts/**'
    # branches:
    #   - main
    #   - "release-*"
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  run-tests:
    name: Run smart contracts test suite
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      # SCCACHE_RECACHE: 1 # to clear cache uncomment this, let the workflow run once, then comment it out again
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly-2022-03-14
            override: true
            components: rustfmt, clippy, rust-src

      - name: Install WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Restore cache
        uses: ./.github/actions/restore-cache

      - name: Install binaryen
        run: |
          wget -O https://github.com/WebAssembly/binaryen/archive/refs/tags/version_102.tar.gz
          tar xvzf version_102.tar.gz
          cd binaryen-version_102
          cmake . && make && sudo make install

      - name: Install cargo-contract
        run: |
          if ! command -v cargo-contract --version &> /dev/null
          then
              echo "cargo-contracts executable could not be found. Installing"
              cargo install cargo-dylint dylint-link
              # revision merging Hans's PR changes [fix for node URL parsing ]
              cargo install --git https://github.com/paritytech/cargo-contract.git --rev 5e6f941805e3d6032dbfa17771a887a362cb3460
          fi

      - name: Display binaryen version
        shell: bash
        run: wasm-opt --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Public Amazon ECR
        id: login-public-ecr
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Run consensus party
        shell: bash
        run: ./.github/scripts/run_smartnet.sh &

      - name: Sleep for a while
        shell: bash
        run: sleep 2

      - name: Run e2e tests
        shell: bash
        run: ./contracts/scripts/deploy.sh
