name: Deploy the button game

on:
  push:
    branches:
    - A0-1416-deployment-workflow-for-the-button-game

env:
  CHECKOUT_REF: A0-1416-deployment-workflow-for-the-button-game
  CACHE_KEY: fe-benjamin-button
  CONTRACTS_ENVFILE: fe-benjamin
  CARGOCONTRACT_REV: 5e6f941805e3d6032dbfa17771a887a362cb3460
  NODE_VERSION: 16
  S3BUCKET_NAME: alephzero-devnet-eu-central-1-ci
  S3BUCKET_PATH: contracts/fe-benjamin-button

jobs:
  checkout_benjamin:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ env.CHECKOUT_REF }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1

      - name: Install WASM target
        run: rustup target add wasm32-unknown-unknown

      - name: Install nightly
        run: rustup component add rust-src --toolchain nightly-2022-08-12-x86_64-unknown-linux-gnu

      - name: Install jq
        shell: bash
        run: |
          sudo apt-get install -y jq

      - name: Install binaryen
        shell: bash
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz -O /tmp/binaryen-version_110-x86_64-linux.tar.gz
          tar -zxvf /tmp/binaryen-version_110-x86_64-linux.tar.gz -C /tmp
          sudo chmod +x /tmp/binaryen-version_110/bin/*
          sudo cp -rf /tmp/binaryen-version_110/* /usr/

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Restore cache
        uses: ./.github/actions/restore-cache
        with:
          target-key: ${{ env.CACHE_KEY }}
          cargo-key: ${{ env.CACHE_KEY }}
          cache-version: v1

      - name: Install cargo additional libs
        run: cargo install dylint-link cargo-dylint

      - name: Install cargo-contract with bug fixes around URL parsing
        run: cargo install --git https://github.com/paritytech/cargo-contract.git --rev ${{ env.CARGOCONTRACT_REV }} --force

      - name: Restore contracts cache
        uses: actions/cache@v3
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MIN: "10"
        with:
          path: |
            contracts/addresses.json
            contracts/ticket_token/target/ink/metadata.json
            contracts/marketplace/target/ink/metadata.json
            contracts/button/target/ink/metadata.json
            contracts/game_token/target/ink/metadata.json
            contracts/access_control/target/ink/metadata.json
          key: contracts-addresses-${{ env.CACHE_KEY }}

      - name: Run clean.sh script
        continue-on-error: true
        shell: bash
        run: |
          source contracts/env/${{ env.CONTRACTS_ENVFILE }} && ./contracts/scripts/clean.sh

      - name: Run deploy.sh script
        shell: bash
        run: |
          source contracts/env/${{ env.CONTRACTS_ENVFILE }} && ./contracts/scripts/deploy.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        env:
          AWS_REGION: us-east-1
        with:
          aws-access-key-id: ${{ secrets.AWS_DEVNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEVNET_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy metadata.json and addresses.json files onto S3 bucket
        shell: bash
        run: |
          aws s3 cp contracts/addresses.json s3://${{ env.S3BUCKET_NAME }}/${{ env.S3BUCKET_PATH }}/addresses.json
          for i in ticket_token marketplace button game_token access_control; do \
            aws s3 cp contracts/"$i"/target/ink/metadata.json s3://${{ env.S3BUCKET_NAME }}/${{ env.S3BUCKET_PATH }}/"$i"/metadata.json; \
          done

      - name: Trigger The Button deployment workflow
        run: |
          curl -X POST 'https://api.github.com/repos/Cardinal-Cryptography/the-button/actions/workflows/main.yaml/dispatches' \
          -H "Accept: application/vnd.github+json" \
          -H 'Authorization: Bearer ${{ secrets.CI_GH_TOKEN }}' \
          -d '{ "ref":"main", "inputs": { "buildImage": false, "deployImage": true, "buildFEBenjaminImage": true, "deployFEBenjaminImage": true }}'
