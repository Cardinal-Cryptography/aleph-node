---
name: Main or release branch commit

on:
  push:
    branches:
      - main
      - 'release-*'

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  build-and-push-cliain:
    needs: [check-vars-and-secrets]
    name: Build and push cliain
    uses: ./.github/workflows/_build-and-push-cliain.yml
    secrets: inherit
    with:
      check-only: false

  build-aleph-e2e-client-image:
    needs: [check-vars-and-secrets]
    name: Build aleph-e2e-client image
    uses: ./.github/workflows/_build-aleph-e2e-client-image.yml
    with:
      ref: ${{ github.ref }}
      push: true
    secrets: inherit

  build-production-node-and-runtime:
    needs: [check-vars-and-secrets]
    name: Build production node and runtime
    uses: ./.github/workflows/_build-production-node-and-runtime.yml
    with:
      ref: ${{ github.ref }}

  check-runtime-determinism:
    needs: [build-production-node-and-runtime]
    uses: ./.github/workflows/_check-runtime-determimism.yml

  store-production-node-and-runtime-in-mainnet-s3:
    name: Store production node and runtime in Mainnet bucket
    runs-on: ubuntu-20.04
    needs: [build-production-node-and-runtime]
    steps:
      - name: Checkout aleph-node source code
        uses: actions/checkout@v4

      - name: Store production node and runtime
        uses: ./.github/actions/store-node-and-runtime
        with:
          profile: production
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-bucket: ${{ secrets.CI_MAINNET_S3BUCKET_NAME }}

  push-production-node-image-to-ecr:
    name: Push production node docker image to ECR
    needs: [build-production-node-and-runtime]
    uses: ./.github/workflows/_push-node-image-to-ecr.yml
    secrets: inherit
    with:
      node-binary: aleph-production-node
      docker-image-name: aleph-node

  send-slack-notification-release:
    name: Send Slack notification about workflow status
    runs-on: ubuntu-20.04
    if: always() && startsWith(github.ref_name, 'release-')
    needs: [push-production-node-image-to-ecr]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send Slack message
        uses: Cardinal-Cryptography/github-actions/slack-notification@v6
        with:
          notify-on: "always"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_ONDUTY }}

  send-slack-notification-main:
    name: Send Slack notification about workflow status
    runs-on: ubuntu-20.04
    if: always() && github.ref_name == 'main'
    needs: [push-production-node-image-to-ecr]
    steps:
      - name: Send Slack message
        uses: Cardinal-Cryptography/github-actions/slack-notification@v6
        with:
          notify-on: "failure"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEV_ONDUTY }}
