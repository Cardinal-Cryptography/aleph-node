---
name: Sync from snapshot test
description: This workflow performs live chain (Mainnet or Testnet) sync from a db snapshot.
inputs:
  aleph-node-artifact-name:
    required: true
    description: 'Name of artifact aleph-node binary'
  args:
    description: "Test arguments passed to bash test runner"
    type: string
    required: true
  snapshot-day:
    description: "Day in date format %Y-%m-%d. If not given, current date is assumed."
    type: string
    required: false
  aws-access-key-id:
    description: 'AWS Access Key ID to be used when storing artifacts'
    required: true
    type: string
  aws-secret-access-key:
    description: 'AWS Secret Access Key to be used when storing artifacts'
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Download aleph-node from artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.aleph-node-artifact-name }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      env:
        AWS_REGION: us-east-1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get snapshot day
      id: get-snapshot-day
      shell: bash
      run: |
        if [[ '${{ inputs.snapshot-day }}' == "" ]]; then
          snapshot_day=$(date "+%Y-%m-%d")
        else
          snapshot_day='${{ inputs.snapshot-day }}'
        fi
        echo "snapshot-day=${snapshot_day}" >> $GITHUB_OUTPUT

    - name: Download snapshot and test db sync
      shell: bash
      run: |
        ./.github/scripts/test_db_sync.sh \
          ${{ inputs.args }} \
          --snapshot-day ${{ steps.get-snapshot-day.outputs.snapshot-day }} \
          --mark-snapshot-as-latest

    - name: Archive logs from failed test
      if: ${{ failure() }}
      shell: bash
      run: |
        tar -czvf aleph-node-logs.tar.gz running/aleph-node.log

    - name: Upload logs from failed e2e test
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        path: aleph-node-logs.tar.gz
        name: aleph-node-logs.tar.gz
        if-no-files-found: error
        retention-days: 7
