name: 'Run e2e test'
description: 'Run single e2e test.'

inputs:
  test-case:
    description: 'Name of test to run.'
    required: true
  randomized:
    description: 'Whether to use randomized test params.'
    required: false
    default: 'false'
  reserved-seats:
    description: 'Number of reserved seats available to validators.'
    required: false
  non-reserved-seats:
    description: 'Number of non-reserved seats available to validators.'
    required: false
  follow-up-finalization-check:
    description: 'Whether to run a follow-up finalization check.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Download artifact with docker image
      uses: actions/download-artifact@v2
      with:
        name: aleph-test-docker

    - name: Load node docker image
      shell: bash
      run: docker load -i aleph-node.tar

    - name: Run consensus party
      shell: bash
      run: ./.github/scripts/run_consensus.sh

    - name: Display bootnode logs
      shell: bash
      run: docker logs Node0 --follow &

    - name: Download artifact with the test suite image
      uses: actions/download-artifact@v2
      with:
        name: aleph-e2e-client

    - name: Load test suite docker image
      shell: bash
      run: docker load -i aleph-e2e-client.tar

    - name: Run single e2e test
      shell: bash
      run: |
        ARGS=(
          -t ${{ inputs.test-case }}
          -r ${{ inputs.randomized }}
        )
        
        if [[ -n "${RESERVED_SEATS:-}" && -n "${NON_RESERVED_SEATS:-}" ]]; then
          ARGS+=(
            -f "${RESERVED_SEATS}"
            -n "${NON_RESERVED_SEATS}"
          )
        fi
        
        ./.github/scripts/run_e2e_test.sh "${ARGS[@]}"

    - name: Run finalization e2e test
      if: inputs.follow-up-finalization-check == 'true'
      shell: bash
      run: ./.github/scripts/run_e2e_test.sh -t finalization

    - name: Print debug if failed
      if: ${{ failure() }}
      shell: bash
      run: |
        cd bin/cliain
        cargo run -- --seed //Alice debug-storage
