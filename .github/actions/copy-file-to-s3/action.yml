---
name: Copy file to S3
description: |
  Uploads a file to an S3 AWS Bucket
inputs:
  source-path:
    description: Path where source file is stored
    required: true
  source-filename:
    description: Name of the source file to upload to S3
    required: true
  s3-bucket-path:
    description: Path on S3 bucket where file will be stored
    required: true
  s3-bucket-filename:
    description: Name of the target file on S3
    required: true
  s3-bucket-name:
    description: Name of the bucket where file is copied on S3
    required: true
  compression:
    description: Set to 'true' to compress file into a .tar.gz archive
    required: false
    default: 'true'
runs:
  using: composite
  steps:
    - name: Copy file to S3 AWS bucket
      shell: bash
      run: |
        if [[
          "${{ inputs.compression }}" == "true" && \
          "${{ inputs.source-filename }}" == "${{ inputs.s3-bucket-filename }}"
        ]]; then
          echo "!!! When compression is 'true', source file cannot have the same"
          echo "!!! name as compressed file uploaded to S3 bucket."
          exit 1
        fi
        if [[
          "${{ inputs.compression }}" == "true" && \
          "${{ inputs.source-filename }}" =~ ^.*\.(tar\.gz|tgz)$
        ]]; then
          echo "! "
          echo "! Source file has .tar.gz or .tgz extension so it seems to be compressed already."
          echo "! Compressing it again will not make any difference.  Try setting 'compression'"
          echo "! input to 'false' to just copy the file."
          echo "! "
        fi
        if [[
          "${{ inputs.compression }}" == "true" && \
          ! "${{ inputs.s3-bucket-filename }}" =~ ^.*\.(tar\.gz|tgz)$
        ]]; then
          echo "! "
          echo "! File is going to be compressed but its file extension will not be"
          echo "! either .tar.gz or .tgz.  It is highly adviced to add an extension."
          echo "! "
        fi
        if [[
          "${{ inputs.compression }}" == "false" && \
          ! "${{ inputs.source-filename }}" =~ ^.*\.(tar\.gz|tgz)$ && \
          "${{ inputs.s3-bucket-filename }}" =~ ^.*\.(tar\.gz|tgz)$
        ]]; then
          echo "! "
          echo "! File is not going to be compressed but its file extension suggests"
          echo "! otherwise.  It is highly adviced to not put archive extension"
          echo "! when it is not one."
          echo "! "
        fi
        aws s3api head-object \
          --bucket '${{ inputs.s3-bucket-name }}' \
          --key '${{ inputs.s3-bucket-path }}/${{ inputs.s3-bucket-filename }}' \
          2> /dev/null || not_exist=true
        if [[ "${not_exist}" ]]; then
          target_s3_filepath=${{ inputs.s3-bucket-path }}/${{ inputs.s3-bucket-filename }}
          if [[ "${{ inputs.compression}}" == "true" ]]; then
            tar -cvzf ${{ inputs.s3-bucket-filename }} -C ${{ inputs.source-path }} \
              ${{ inputs.source-filename }}
            aws s3 cp ${{ inputs.s3-bucket-filename }} \
              s3://${{ inputs.s3-bucket-name }}/"${target_s3_filepath}"
          else
            aws s3 cp ${{ inputs.source-path }} \
              s3://${{ inputs.s3-bucket-name }}/"${target_s3_filepath}"
          fi
        else
          echo "File ${{ inputs.s3-bucket-filename }} already exists on S3 bucket."
        fi
