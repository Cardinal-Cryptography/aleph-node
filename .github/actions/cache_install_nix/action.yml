name: 'Cache install nix'
description: 'Restore nix-store from github cache and install nix'

inputs:
  cache-key:
    description: 'key used for storing in CI cache'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check if already installed
      id: check
      shell: bash
      run: |
        if [[ ! -f ~/.nix-installed ]]; then
          exit -1
        fi
    - name: Prepare nix store
      if: steps.check.conclusion == 'failure'
      shell: bash
      run: |
        # Create with liberal rights, otherwise cache action will complain
        # about permission errors.
        sudo mkdir -p /nix/store
        sudo chmod -R 777 /nix

    - name: Cache nix store
      if: steps.check.conclusion == 'failure'
      uses: actions/cache@v2
      with:
        path: |
          /nix/store/**
          /nix/var/nix/*/*
          /nix/var/nix/db/*
          /nix/var/nix/db/*/**
          !/nix/var/nix/daemon-socket/socket
          !/nix/var/nix/userpool/*
          !/nix/var/nix/gc.lock
          !/nix/var/nix/db/big-lock
          !/nix/var/nix/db/reserved
        key: ${{ inputs.cache-key }}

    - uses: cachix/install-nix-action@v17
      if: steps.check.conclusion == 'failure'
      with:
        install_url: https://releases.nixos.org/nix/nix-2.7.0/install
        nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/2c162d49cd5b979eb66ff1653aecaeaa01690fcc.tar.gz
        extra_nix_config: |
          # keep all store paths necessary to build the outputs
          keep-outputs = true
          keep-derivations = true

    - name: Leave some `evidence` after installation
      shell: bash
      run: |
        touch ~/.nix-installed
