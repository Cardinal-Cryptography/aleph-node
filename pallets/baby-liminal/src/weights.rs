//! Autogenerated weights for pallet_baby_liminal
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-24, STEPS: `20`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("chainspec.json"), DB CACHE: 1024

// Executed Command:
// target/release/aleph-node
// benchmark
// pallet
// --chain=chainspec.json
// --pallet=pallet_baby_liminal
// --extrinsic=*
// --steps=20
// --repeat=50
// --template=.maintain/pallet-weight-template.hbs
// --execution=wasm
// --wasm-execution=compiled
// --output=pallets/baby-liminal/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_baby_liminal.
pub trait WeightInfo {
    fn store_key(key_length: u32) -> Weight;
    fn overwrite_equal_key(key_length: u32) -> Weight;
    fn overwrite_key(key_length: u32) -> Weight;
    fn delete_key(key_length: u32) -> Weight;
    fn verify_groth16() -> Weight;
    fn verify_gm17() -> Weight;
    fn verify_marlin() -> Weight;
    fn verify_data_too_long(excess: u32) -> Weight;
    fn verify_data_deserializing_fails(data_length: u32) -> Weight;
    fn verify_key_deserializing_fails(key_length: u32) -> Weight;
    fn poseidon_one_to_one_wasm() -> Weight;
    fn poseidon_two_to_one_wasm() -> Weight;
    fn poseidon_four_to_one_wasm() -> Weight;
    fn poseidon_one_to_one_host() -> Weight;
    fn poseidon_two_to_one_host() -> Weight;
    fn poseidon_four_to_one_host() -> Weight;
    // TODO: fill it with the methods that you actually need
}

impl<I: BenchmarkInfo> WeightInfo for I {
    fn store_key(key_length: u32) -> Weight {
        <I as BenchmarkInfo>::store_key(key_length)
    }

    fn overwrite_key(key_length: u32) -> Weight {
        <I as BenchmarkInfo>::overwrite_key(key_length)
    }

    fn overwrite_equal_key(key_length: u32) -> Weight {
        <I as BenchmarkInfo>::overwrite_equal_key(key_length)
    }

    fn delete_key(key_length: u32) -> Weight {
        <I as BenchmarkInfo>::delete_key(key_length)
    }

    fn verify_groth16() -> Weight {
        <I as BenchmarkInfo>::verify_groth16_xor()
            .max(<I as BenchmarkInfo>::verify_groth16_linear_equation())
            .max(<I as BenchmarkInfo>::verify_groth16_merkle_tree_8())
            .max(<I as BenchmarkInfo>::verify_groth16_merkle_tree_64())
            .max(<I as BenchmarkInfo>::verify_groth16_merkle_tree_1024())
    }

    fn verify_gm17() -> Weight {
        <I as BenchmarkInfo>::verify_gm17_xor()
            .max(<I as BenchmarkInfo>::verify_gm17_linear_equation())
            .max(<I as BenchmarkInfo>::verify_gm17_merkle_tree_8())
            .max(<I as BenchmarkInfo>::verify_gm17_merkle_tree_64())
            .max(<I as BenchmarkInfo>::verify_gm17_merkle_tree_1024())
    }

    fn verify_marlin() -> Weight {
        <I as BenchmarkInfo>::verify_marlin_xor()
            .max(<I as BenchmarkInfo>::verify_marlin_linear_equation())
            .max(<I as BenchmarkInfo>::verify_marlin_merkle_tree_8())
            .max(<I as BenchmarkInfo>::verify_marlin_merkle_tree_64())
            .max(<I as BenchmarkInfo>::verify_marlin_merkle_tree_1024())
    }

    fn verify_data_too_long(excess: u32) -> Weight {
        <I as BenchmarkInfo>::verify_data_too_long(excess)
    }

    fn verify_data_deserializing_fails(data_length: u32) -> Weight {
        <I as BenchmarkInfo>::verify_data_deserializing_fails(data_length)
    }

    fn verify_key_deserializing_fails(key_length: u32) -> Weight {
        <I as BenchmarkInfo>::verify_key_deserializing_fails(key_length)
    }

    fn poseidon_one_to_one_wasm() -> Weight {
        <I as BenchmarkInfo>::poseidon_one_to_one_wasm()
    }

    fn poseidon_two_to_one_wasm() -> Weight {
        <I as BenchmarkInfo>::poseidon_two_to_one_wasm()
    }

    fn poseidon_four_to_one_wasm() -> Weight {
        <I as BenchmarkInfo>::poseidon_four_to_one_wasm()
    }

    fn poseidon_one_to_one_host() -> Weight {
        <I as BenchmarkInfo>::poseidon_one_to_one_host()
    }

    fn poseidon_two_to_one_host() -> Weight {
        <I as BenchmarkInfo>::poseidon_two_to_one_host()
    }

    fn poseidon_four_to_one_host() -> Weight {
        <I as BenchmarkInfo>::poseidon_four_to_one_host()
    }
    // TODO: compile results from benchmarks
}

/// Benchmark results for pallet_baby_liminal.
trait BenchmarkInfo {
    fn store_key(l: u32, ) -> Weight;
    fn overwrite_equal_key(l: u32, ) -> Weight;
    fn overwrite_key(l: u32, ) -> Weight;
    fn delete_key(l: u32, ) -> Weight;
    fn verify_groth16_xor() -> Weight;
    fn verify_groth16_linear_equation() -> Weight;
    fn verify_groth16_merkle_tree_8() -> Weight;
    fn verify_groth16_merkle_tree_64() -> Weight;
    fn verify_groth16_merkle_tree_1024() -> Weight;
    fn verify_gm17_xor() -> Weight;
    fn verify_gm17_linear_equation() -> Weight;
    fn verify_gm17_merkle_tree_8() -> Weight;
    fn verify_gm17_merkle_tree_64() -> Weight;
    fn verify_gm17_merkle_tree_1024() -> Weight;
    fn verify_marlin_xor() -> Weight;
    fn verify_marlin_linear_equation() -> Weight;
    fn verify_marlin_merkle_tree_8() -> Weight;
    fn verify_marlin_merkle_tree_64() -> Weight;
    fn verify_marlin_merkle_tree_1024() -> Weight;
    fn verify_data_too_long(e: u32, ) -> Weight;
    fn verify_data_deserializing_fails(l: u32, ) -> Weight;
    fn verify_key_deserializing_fails(l: u32, ) -> Weight;
    fn poseidon_one_to_one_wasm() -> Weight;
    fn poseidon_two_to_one_wasm() -> Weight;
    fn poseidon_four_to_one_wasm() -> Weight;
    fn poseidon_one_to_one_host() -> Weight;
    fn poseidon_two_to_one_host() -> Weight;
    fn poseidon_four_to_one_host() -> Weight;
}

/// Weights for pallet_baby_liminal using the Substrate node and recommended hardware.
pub struct AlephWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> BenchmarkInfo for AlephWeight<T> {
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyOwners (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn store_key(l: u32, ) -> Weight {
        // Minimum execution time: 31_658 nanoseconds.
        Weight::from_ref_time(34_499_690_u64)
            // Standard Error: 84
            .saturating_add(Weight::from_ref_time(702_u64).saturating_mul(l as u64))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn overwrite_equal_key(l: u32, ) -> Weight {
        // Minimum execution time: 37_099 nanoseconds.
        Weight::from_ref_time(38_536_232_u64)
            // Standard Error: 22
            .saturating_add(Weight::from_ref_time(1_085_u64).saturating_mul(l as u64))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 9999]`.
    fn overwrite_key(l: u32, ) -> Weight {
        // Minimum execution time: 35_655 nanoseconds.
        Weight::from_ref_time(38_452_165_u64)
            // Standard Error: 38
            .saturating_add(Weight::from_ref_time(1_336_u64).saturating_mul(l as u64))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn delete_key(_l: u32, ) -> Weight {
        // Minimum execution time: 28_070 nanoseconds.
        Weight::from_ref_time(30_880_281_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_xor() -> Weight {
        // Minimum execution time: 40_032_504 nanoseconds.
        Weight::from_ref_time(41_098_756_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_linear_equation() -> Weight {
        // Minimum execution time: 35_933_619 nanoseconds.
        Weight::from_ref_time(36_565_179_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_8() -> Weight {
        // Minimum execution time: 42_265_480 nanoseconds.
        Weight::from_ref_time(48_221_643_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_64() -> Weight {
        // Minimum execution time: 42_166_663 nanoseconds.
        Weight::from_ref_time(43_383_932_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_1024() -> Weight {
        // Minimum execution time: 42_815_698 nanoseconds.
        Weight::from_ref_time(43_269_712_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_xor() -> Weight {
        // Minimum execution time: 44_932_740 nanoseconds.
        Weight::from_ref_time(51_503_216_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_linear_equation() -> Weight {
        // Minimum execution time: 36_555_052 nanoseconds.
        Weight::from_ref_time(41_757_278_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_8() -> Weight {
        // Minimum execution time: 47_005_199 nanoseconds.
        Weight::from_ref_time(51_615_674_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_64() -> Weight {
        // Minimum execution time: 46_871_974 nanoseconds.
        Weight::from_ref_time(53_295_948_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_1024() -> Weight {
        // Minimum execution time: 47_257_928 nanoseconds.
        Weight::from_ref_time(50_023_439_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_xor() -> Weight {
        // Minimum execution time: 69_820_449 nanoseconds.
        Weight::from_ref_time(79_650_092_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_linear_equation() -> Weight {
        // Minimum execution time: 69_694_729 nanoseconds.
        Weight::from_ref_time(78_639_435_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_8() -> Weight {
        // Minimum execution time: 69_591_393 nanoseconds.
        Weight::from_ref_time(70_275_532_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_64() -> Weight {
        // Minimum execution time: 68_549_592 nanoseconds.
        Weight::from_ref_time(78_651_980_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_1024() -> Weight {
        // Minimum execution time: 68_611_378 nanoseconds.
        Weight::from_ref_time(69_965_025_000_u64)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    /// The range of component `e` is `[1, 10000000]`.
    fn verify_data_too_long(_e: u32, ) -> Weight {
        // Minimum execution time: 16_120 nanoseconds.
        Weight::from_ref_time(17_911_151_u64)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    /// The range of component `l` is `[1, 10000]`.
    fn verify_data_deserializing_fails(_l: u32, ) -> Weight {
        // Minimum execution time: 19_173 nanoseconds.
        Weight::from_ref_time(24_732_790_u64)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn verify_key_deserializing_fails(l: u32, ) -> Weight {
        // Minimum execution time: 5_242_809 nanoseconds.
        Weight::from_ref_time(5_497_541_788_u64)
            // Standard Error: 1_811
            .saturating_add(Weight::from_ref_time(1_996_u64).saturating_mul(l as u64))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// The range of component `x` is `[0, 4294967295]`.
    fn poseidon_one_to_one_wasm() -> Weight {
        // Minimum execution time: 5_733_464 nanoseconds.
        Weight::from_ref_time(6_205_016_545_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    fn poseidon_two_to_one_wasm() -> Weight {
        // Minimum execution time: 9_035_814 nanoseconds.
        Weight::from_ref_time(8_788_266_980_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    /// The range of component `w` is `[0, 4294967295]`.
    /// The range of component `z` is `[0, 4294967295]`.
    fn poseidon_four_to_one_wasm() -> Weight {
        // Minimum execution time: 16_998_082 nanoseconds.
        Weight::from_ref_time(20_140_374_981_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    fn poseidon_one_to_one_host() -> Weight {
        // Minimum execution time: 916_877 nanoseconds.
        Weight::from_ref_time(934_196_709_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    fn poseidon_two_to_one_host() -> Weight {
        // Minimum execution time: 1_455_898 nanoseconds.
        Weight::from_ref_time(1_496_804_686_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    /// The range of component `w` is `[0, 4294967295]`.
    /// The range of component `z` is `[0, 4294967295]`.
    fn poseidon_four_to_one_host() -> Weight {
        // Minimum execution time: 2_736_918 nanoseconds.
        Weight::from_ref_time(2_843_719_361_u64)
    }
}

// For backwards compatibility and tests
impl BenchmarkInfo for () {
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyOwners (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn store_key(l: u32, ) -> Weight {
        // Minimum execution time: 31_658 nanoseconds.
        Weight::from_ref_time(34_499_690_u64)
            // Standard Error: 84
            .saturating_add(Weight::from_ref_time(702_u64).saturating_mul(l as u64))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(4_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn overwrite_equal_key(l: u32, ) -> Weight {
        // Minimum execution time: 37_099 nanoseconds.
        Weight::from_ref_time(38_536_232_u64)
            // Standard Error: 22
            .saturating_add(Weight::from_ref_time(1_085_u64).saturating_mul(l as u64))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 9999]`.
    fn overwrite_key(l: u32, ) -> Weight {
        // Minimum execution time: 35_655 nanoseconds.
        Weight::from_ref_time(38_452_165_u64)
            // Standard Error: 38
            .saturating_add(Weight::from_ref_time(1_336_u64).saturating_mul(l as u64))
            .saturating_add(RocksDbWeight::get().reads(4_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeyOwners (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeyOwners (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeyDeposits (r:1 w:1)
    // Proof Skipped: BabyLiminal VerificationKeyDeposits (max_values: None, max_size: None, mode: Measured)
    // Storage: BabyLiminal VerificationKeys (r:0 w:1)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn delete_key(_l: u32, ) -> Weight {
        // Minimum execution time: 28_070 nanoseconds.
        Weight::from_ref_time(30_880_281_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(3_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_xor() -> Weight {
        // Minimum execution time: 40_032_504 nanoseconds.
        Weight::from_ref_time(41_098_756_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_linear_equation() -> Weight {
        // Minimum execution time: 35_933_619 nanoseconds.
        Weight::from_ref_time(36_565_179_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_8() -> Weight {
        // Minimum execution time: 42_265_480 nanoseconds.
        Weight::from_ref_time(48_221_643_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_64() -> Weight {
        // Minimum execution time: 42_166_663 nanoseconds.
        Weight::from_ref_time(43_383_932_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_groth16_merkle_tree_1024() -> Weight {
        // Minimum execution time: 42_815_698 nanoseconds.
        Weight::from_ref_time(43_269_712_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_xor() -> Weight {
        // Minimum execution time: 44_932_740 nanoseconds.
        Weight::from_ref_time(51_503_216_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_linear_equation() -> Weight {
        // Minimum execution time: 36_555_052 nanoseconds.
        Weight::from_ref_time(41_757_278_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_8() -> Weight {
        // Minimum execution time: 47_005_199 nanoseconds.
        Weight::from_ref_time(51_615_674_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_64() -> Weight {
        // Minimum execution time: 46_871_974 nanoseconds.
        Weight::from_ref_time(53_295_948_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_gm17_merkle_tree_1024() -> Weight {
        // Minimum execution time: 47_257_928 nanoseconds.
        Weight::from_ref_time(50_023_439_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_xor() -> Weight {
        // Minimum execution time: 69_820_449 nanoseconds.
        Weight::from_ref_time(79_650_092_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_linear_equation() -> Weight {
        // Minimum execution time: 69_694_729 nanoseconds.
        Weight::from_ref_time(78_639_435_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_8() -> Weight {
        // Minimum execution time: 69_591_393 nanoseconds.
        Weight::from_ref_time(70_275_532_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_64() -> Weight {
        // Minimum execution time: 68_549_592 nanoseconds.
        Weight::from_ref_time(78_651_980_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    // Storage: System ParentHash (r:1 w:0)
    // Proof: System ParentHash (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
    fn verify_marlin_merkle_tree_1024() -> Weight {
        // Minimum execution time: 68_611_378 nanoseconds.
        Weight::from_ref_time(69_965_025_000_u64)
            .saturating_add(RocksDbWeight::get().reads(3_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    /// The range of component `e` is `[1, 10000000]`.
    fn verify_data_too_long(_e: u32, ) -> Weight {
        // Minimum execution time: 16_120 nanoseconds.
        Weight::from_ref_time(17_911_151_u64)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    /// The range of component `l` is `[1, 10000]`.
    fn verify_data_deserializing_fails(_l: u32, ) -> Weight {
        // Minimum execution time: 19_173 nanoseconds.
        Weight::from_ref_time(24_732_790_u64)
            .saturating_add(RocksDbWeight::get().reads(1_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    // Storage: System Account (r:1 w:1)
    // Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
    // Storage: BabyLiminal VerificationKeys (r:1 w:0)
    // Proof Skipped: BabyLiminal VerificationKeys (max_values: None, max_size: None, mode: Measured)
    /// The range of component `l` is `[1, 10000]`.
    fn verify_key_deserializing_fails(l: u32, ) -> Weight {
        // Minimum execution time: 5_242_809 nanoseconds.
        Weight::from_ref_time(5_497_541_788_u64)
            // Standard Error: 1_811
            .saturating_add(Weight::from_ref_time(1_996_u64).saturating_mul(l as u64))
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(1_u64))
    }
    /// The range of component `x` is `[0, 4294967295]`.
    fn poseidon_one_to_one_wasm() -> Weight {
        // Minimum execution time: 5_733_464 nanoseconds.
        Weight::from_ref_time(6_205_016_545_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    fn poseidon_two_to_one_wasm() -> Weight {
        // Minimum execution time: 9_035_814 nanoseconds.
        Weight::from_ref_time(8_788_266_980_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    /// The range of component `w` is `[0, 4294967295]`.
    /// The range of component `z` is `[0, 4294967295]`.
    fn poseidon_four_to_one_wasm() -> Weight {
        // Minimum execution time: 16_998_082 nanoseconds.
        Weight::from_ref_time(20_140_374_981_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    fn poseidon_one_to_one_host() -> Weight {
        // Minimum execution time: 916_877 nanoseconds.
        Weight::from_ref_time(934_196_709_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    fn poseidon_two_to_one_host() -> Weight {
        // Minimum execution time: 1_455_898 nanoseconds.
        Weight::from_ref_time(1_496_804_686_u64)
    }
    /// The range of component `x` is `[0, 4294967295]`.
    /// The range of component `y` is `[0, 4294967295]`.
    /// The range of component `w` is `[0, 4294967295]`.
    /// The range of component `z` is `[0, 4294967295]`.
    fn poseidon_four_to_one_host() -> Weight {
        // Minimum execution time: 2_736_918 nanoseconds.
        Weight::from_ref_time(2_843_719_361_u64)
    }
}
