// This file is part of Substrate.

// Copyright (C) 2021 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_tendermint_light_client
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-26, STEPS: `1`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("docker/data/chainspec.json"), DB CACHE: 128

// Executed Command:
// target/debug/aleph-node
// benchmark
// --chain
// docker/data/chainspec.json
// --extrinsic=*
// --pallet=pallet-tendermint-light-client
// --output
// ./pallets/tendermint-light-client/src/weights.rs
// --template=./.maintain/pallet-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_tendermint_light_client.
pub trait WeightInfo {
	fn initialize_client(v: u32, ) -> Weight;
	fn update_client(v: u32, ) -> Weight;
	fn update_client_with_pruning(v: u32, ) -> Weight;
}

/// Weights for pallet_tendermint_light_client using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashesPointer (r:0 w:1)
	// Storage: TendermintLightClient LightClientOptions (r:0 w:1)
	// Storage: TendermintLightClient IsHalted (r:0 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:0 w:1)
	fn initialize_client(_v: u32, ) -> Weight {
		(945_277_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	// Storage: TendermintLightClient IsHalted (r:1 w:0)
	// Storage: TendermintLightClient LightClientOptions (r:1 w:0)
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: TendermintLightClient ImportedHashesPointer (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn update_client(_v: u32, ) -> Weight {
		(2_132_166_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: TendermintLightClient IsHalted (r:1 w:0)
	// Storage: TendermintLightClient LightClientOptions (r:1 w:0)
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:1 w:2)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: TendermintLightClient ImportedHashesPointer (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn update_client_with_pruning(_v: u32, ) -> Weight {
		(2_474_820_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(11 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashesPointer (r:0 w:1)
	// Storage: TendermintLightClient LightClientOptions (r:0 w:1)
	// Storage: TendermintLightClient IsHalted (r:0 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:0 w:1)
	fn initialize_client(_v: u32, ) -> Weight {
		(945_277_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().writes(8 as Weight))
	}
	// Storage: TendermintLightClient IsHalted (r:1 w:0)
	// Storage: TendermintLightClient LightClientOptions (r:1 w:0)
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: TendermintLightClient ImportedHashesPointer (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn update_client(_v: u32, ) -> Weight {
		(2_132_166_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(11 as Weight))
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
	}
	// Storage: TendermintLightClient IsHalted (r:1 w:0)
	// Storage: TendermintLightClient LightClientOptions (r:1 w:0)
	// Storage: TendermintLightClient LastImportedBlockHash (r:1 w:1)
	// Storage: TendermintLightClient ImportedBlocks (r:1 w:2)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: TendermintLightClient ImportedHashesPointer (r:1 w:1)
	// Storage: TendermintLightClient ImportedHashes (r:1 w:1)
	// Storage: System Number (r:1 w:0)
	// Storage: System ExecutionPhase (r:1 w:0)
	// Storage: System EventCount (r:1 w:1)
	// Storage: System Events (r:1 w:1)
	fn update_client_with_pruning(_v: u32, ) -> Weight {
		(2_474_820_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(11 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}
}
