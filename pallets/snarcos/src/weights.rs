//! Autogenerated weights for pallet_snarcos
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-26, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("/tmp/chainspec.json"), DB CACHE: 1024

// Executed Command:
// ./target/release/aleph-node
// benchmark
// pallet
// --chain=/tmp/chainspec.json
// --pallet=pallet_snarcos
// --extrinsic=*
// --steps=20
// --repeat=10
// --template=.maintain/pallet-weight-template.hbs
// --execution=wasm
// --wasm-execution=compiled
// --output=pallets/snarcos/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_snarcos.
pub trait WeightInfo {
    fn store_key(key_length: u32) -> Weight;
    fn verify_groth16() -> Weight;
    fn verify_gm17() -> Weight;
}

impl<I: BenchmarkInfo> WeightInfo for I {
	fn store_key(key_length: u32) -> Weight {
		<I as BenchmarkInfo>::store_key(key_length)
	}

	fn verify_groth16() -> Weight {
		<I as BenchmarkInfo>::verify_groth16_xor()
			.max(<I as BenchmarkInfo>::verify_groth16_linear_equation())
			.max(<I as BenchmarkInfo>::verify_groth16_merkle_tree())
	}

	fn verify_gm17() -> Weight {
		<I as BenchmarkInfo>::verify_gm17_xor()
			.max(<I as BenchmarkInfo>::verify_gm17_linear_equation())
			.max(<I as BenchmarkInfo>::verify_gm17_merkle_tree())
	}
}

/// Benchmark results for pallet_snarcos.
trait BenchmarkInfo {
	fn store_key(l: u32, ) -> Weight;
	fn verify_groth16_xor() -> Weight;
	fn verify_groth16_linear_equation() -> Weight;
	fn verify_groth16_merkle_tree() -> Weight;
	fn verify_gm17_xor() -> Weight;
	fn verify_gm17_linear_equation() -> Weight;
	fn verify_gm17_merkle_tree() -> Weight;
}

/// Weights for pallet_snarcos using the Substrate node and recommended hardware.
pub struct AlephWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> BenchmarkInfo for AlephWeight<T> {
	// Storage: Snarcos VerificationKeys (r:1 w:1)
	fn store_key(l: u32, ) -> Weight {
		(13_481_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_xor() -> Weight {
		(44_472_517_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_linear_equation() -> Weight {
		(34_476_501_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_merkle_tree() -> Weight {
		(46_305_240_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_xor() -> Weight {
		(49_696_284_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_linear_equation() -> Weight {
		(39_640_711_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_merkle_tree() -> Weight {
		(51_937_767_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
}

// For backwards compatibility and tests
impl BenchmarkInfo for () {
	// Storage: Snarcos VerificationKeys (r:1 w:1)
	fn store_key(l: u32, ) -> Weight {
		(13_481_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_xor() -> Weight {
		(44_472_517_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_linear_equation() -> Weight {
		(34_476_501_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_groth16_merkle_tree() -> Weight {
		(46_305_240_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_xor() -> Weight {
		(49_696_284_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_linear_equation() -> Weight {
		(39_640_711_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	// Storage: Snarcos VerificationKeys (r:1 w:0)
	fn verify_gm17_merkle_tree() -> Weight {
		(51_937_767_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
}
